{"version":3,"sources":["assets/imgs/404.png","components/cardComp/gameCard.jsx","components/cardComp/newsGameCardWrapper.jsx","constants/constants.js","utils/user.util.js","components/LayoutComps/Header.js","components/LayoutComps/Footer.js","components/LayoutComps/Layout.js","pages/index.jsx","pages/login.jsx","pages/signUp.jsx","pages/forgetPassword.jsx","pages/changePassword.jsx","pages/verifyAccount.jsx","pages/notFound.jsx","pages/resetPassword.jsx","pages/enableTfa.jsx","index.js"],"names":["module","exports","GameCard","props","useHistory","style","position","width","height","margin","background","bottom","left","className","src","jsx","NewsGameCard","display","flex","G_API_URL","process","showNotification","type","msg","notification","message","duration","login_user","data","user_token","localStorage","setItem","check_login","getItem","getToken","Header","history","to","onClick","axios","post","headers","then","res","catch","console","log","clear","setTimeout","window","location","href","push","Footer","Component","Layout","state","flexDirection","padding","this","children","Hello","name","SignIn","useState","loggingIn","setLoggingIn","tfaLogin","setTfaLogin","tfaId","setTfaId","useEffect","loginUser","values","mode","apiUrl","status","auth_id","onFinishFailed","errorInfo","top","initialValues","remember","onFinish","e","Item","rules","required","placeholder","htmlType","loading","Password","SignUp","ForgetPassword","ChangePassword","Authorization","hasFeedback","min","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","VerifyAccount","params","queryString","parse","search","verifyUser","username","u_name","v_code","vcode","G_HOME_URL","NotFound","notfound","replace","ResetPassword","r_code","EnableTfa","tfaModalVisible","setTfaModalVisible","tfaQr","setTfaQr","title","visible","onCancel","footer","val","put","img","App","path","exact","component","render","document","getElementById"],"mappings":"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","file":"static/js/main.f718f40b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.d64adc8a.png\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst GameCard = (props) => {\n  const history = useHistory();\n  return (\n    <>\n      <div\n        style={{\n          position: \"relative\",\n          width: \"max-content\",\n          height: \"max-content\",\n          margin: \"20px\",\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            background: \"rgb(254, 141, 27) none repeat scroll 0% 0%\",\n            width: \"50px\",\n            height: \"50px\",\n            bottom: \"-8px\",\n            left: \"-8px\",\n            \"border-radius\": \"15px\",\n            \"z-index\": 0,\n          }}\n        ></div>\n        <div className=\"gameCardWrapper\">\n          <img\n            src=\"https://s1.gaming-cdn.com/images/products/1995/271x377/playerunknowns-battlegrounds-cover.jpg\"\n            className=\"gameImg\"\n          />\n          <div className=\"gameName\">\n            <h3>Pubg Tournament</h3>|<span>Public</span>\n          </div>\n\n          <span className=\"gameDesc\">\n            This is description text for game Description This is description\n            text for game Description This is description text for game\n            Description This is description text for game Description\n          </span>\n          <div className=\"gameInfo\">\n            <span>By: Vikrant</span>|<span>44 Slots Left</span>\n          </div>\n        </div>\n      </div>\n\n      <style jsx>{`\n        .gameCardWrapper {\n          display: flex;\n          flex-direction: column;\n          border: 0px solid;\n          box-shadow: rgba(200, 200, 200, 0.63) 1px 1px 4px 1px;\n          height: 330px;\n          width: 250px;\n          border-top-color: #fe8d1b;\n          border-top-width: 8px;\n          border-radius: 15px;\n          position: relative;\n          background: #ffffff;\n          z-index: 2;\n          padding: 10px;\n          justify-content: space-between;\n          cursor: pointer;\n        }\n        .gameImg {\n          height: 140px;\n        }\n        .gameInfo,\n        .gameName {\n          display: flex;\n          justify-content: space-around;\n        }\n        .gameDesc {\n          height: 90px;\n          overflow: hidden;\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default GameCard;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst NewsGameCard = (props) => {\n  const history = useHistory();\n  return (\n    <>\n      <div className=\"newsgameCardWrapper\">\n        <img\n          src=\"https://s1.gaming-cdn.com/images/products/1995/271x377/playerunknowns-battlegrounds-cover.jpg\"\n          className=\"gameImg\"\n        />\n        <div className=\"gameInfo\">\n          <div style={{ display: \"flex\", width: \"100%\" }}>\n            <h3 style={{ flex: 3 }}>Pubg Tournament</h3>\n            <span className=\"gameStatus\">44 min Left</span>\n          </div>\n          <span className=\"gameDesc\">\n            This is description This is descriptionThis is description This is\n            description This is description This is description This is\n            description This is description This is description\n          </span>\n        </div>\n      </div>\n      <style jsx>{`\n        .newsgameCardWrapper {\n          display: flex;\n          border: 0px solid;\n          box-shadow: rgba(200, 200, 200, 0.63) 1px 1px 4px 1px;\n          height: 110px;\n          width: 364px;\n          border-top-color: #fe8d1b;\n          border-top-width: 8px;\n          border-radius: 15px;\n          background: #ffffff;\n          z-index: 2;\n          padding: 10px;\n          cursor: pointer;\n          margin: 10px;\n        }\n        .newsgameCardWrapper .gameImg {\n          height: 65px;\n          width: 65px;\n          flex: 1;\n          align-self: center;\n        }\n        .newsgameCardWrapper .gameInfo {\n          display: flex;\n          padding: 2px;\n          flex-direction: column;\n          flex: 3;\n        }\n        .newsgameCardWrapper .gameStatus {\n          flex: 2;\n          text-align: end;\n        }\n        .newsgameCardWrapper .gameDesc {\n          overflow: hidden;\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default NewsGameCard;\n","export const G_HOME_URL = process.env.REACT_APP_G_HOME_URL;\nexport const G_API_URL = process.env.REACT_APP_G_API_URL;\n","import { notification } from \"antd\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\n\nconst showNotification = (type = \"error\", msg = \"Something went wrong\") => {\n    notification[type]({\n        message: msg,\n        duration: 2\n    });\n};\n\n\nconst login_user = (data) => {\n    if (data?.user_token) {\n        localStorage.setItem(\"u_token\", data.user_token)\n    }\n};\n\nconst check_login = () => {\n    if (localStorage.getItem(\"u_token\"))\n        return true;\n    return false;\n};\n\nconst logout_user = () => {\n    axios.post(G_API_URL + \"user/logout\", {}, {\n        headers: {\n            'Authorization': getToken()\n        }\n    }).then((res) => {\n        showNotification(\"success\", \"You are logged out successfully\")\n    }).catch(() => {\n        console.log(\"Unable to invalidate token, clearing token from localstorage\")\n    });\n    localStorage.clear();\n    setTimeout(() => {\n        window.location.href = process.env.PUBLIC_URL + '/login';\n    }, 1500)\n};\n\nconst getToken = () => {\n    return localStorage.getItem(\"u_token\")\n};\n\nexport { login_user, check_login, logout_user, showNotification, getToken };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom';\nimport { check_login, logout_user } from \"../../utils/user.util\"\n\nconst menu = (\n    <>\n        <div className=\"profile-menu-container\">\n\n            <div\n                className=\"menu-item\"\n            >\n                Profile\n            </div>\n\n            <div\n                className=\"menu-item\"\n            >\n                Change Password\n            </div>\n            <div className=\"menu-item logout-btn\">\n                Logout\n            </div>\n        </div>\n    </>\n);\n\nconst Header = props => {\n    const history = useHistory();\n    return (\n        <>\n            <div className=\"navbar-container\">\n                <div className=\"right-container\">\n                    <div\n                        className=\"brand-logo\"\n                    >\n                        <Link to={process.env.PUBLIC_URL}>\n                            Logo\n                        </Link>\n                    </div>\n                </div>\n                {!check_login() ?\n                    <div className=\"loggedOutStateOpt\" style={{ display: 'flex' }}>\n                        <div className=\"loginBtn primaryBtn-1\" onClick={() => history.push(process.env.PUBLIC_URL + '/login')}>\n                            Log In\n                    </div>\n                        <div className=\"signUpBtn primaryBtn-2\" onClick={() => history.push(process.env.PUBLIC_URL + '/signup')}>\n                            Sign Up\n                    </div>\n                    </div> : <div className=\"primaryBtn-1\" onClick={() => { logout_user() }}>Log Out</div>}\n\n            </div>\n\n            <style jsx>\n                {`\n                    .navbar-container {\n                        height: 54px;\n                        background: #ffffff;\n                        box-shadow: 0px 5px 11px 0px rgba(50,50,50,0.08);\n                        position: fixed;\n                        top: 0;\n                        left: 0;\n                        right: 0;\n                        z-index: 1000;\n                        padding-right: 30px;\n                        padding-left: 30px;\n                        align-items: center;\n                        display: flex;\n                        justify-content: space-between;\n                    }\n                    .navbar-container .brand-logo {\n                        margin-right: 2.4rem;\n                    }\n                    .loginBtn, .signUpBtn{\n                        height: 35px;\n                    }\n                `}\n            </style>\n        </>\n    );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class Footer extends Component {\n    render() {\n        return (\n            <>\n                <div className=\"footer-container\">\n                    <div className=\"footer-copyrights\">\n                        &copy; VG\n                    </div>\n                </div>\n                <style jsx>\n                    {`\n                        .footer-container{\n                            color: #ffffff;\n                            background: black;\n                            position: absolute;\n                            left: 0;\n                            right: 0;\n                            padding: 50px;\n                           }\n                        .footer-copyrights {\n                            text-align: center;\n                        }\n                    `}\n                </style>\n            </>\n        );\n    }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\n\nexport class Layout extends Component {\n    constructor() {\n        super();\n        this.state = {\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        return (\n            <>\n                <div style={{ \"height\": '100%', display: 'flex', flexDirection: \"column\" }}>\n                    <div style={{ 'flex': 1 }}>\n                        <Header />\n                    </div>\n                    <div className=\"layoutBody\" style={{ padding: '50px', 'flex': 8 }} >\n                        {this.props.children}\n                    </div>\n                    <div style={{ 'flex': 1 }}>\n                        <Footer />\n                    </div>\n                </div>\n                <style jsx>{\n                    `\n                    #root{\n                        height: 100%;\n                    }\n                    `\n                }\n                </style>\n            </>\n        );\n    }\n}\n\nexport default Layout;\n","import React, { Component } from \"react\";\nimport GameCard from \"../components/cardComp/gameCard\";\nimport NewsGameCard from \"../components/cardComp/newsGameCardWrapper\";\nimport Layout from \"../components/LayoutComps/Layout\";\n\nclass Hello extends Component {\n  state = {\n    name: \"\",\n  };\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <Layout>\n        <div className=\"mainWrapper\">\n          <div className=\"gameListing\">\n            <GameCard />\n            <GameCard /> <GameCard /> <GameCard /> <GameCard />\n          </div>\n          <div className=\"newsWrapper\">\n            <NewsGameCard />\n            <NewsGameCard />\n            <NewsGameCard />\n            <NewsGameCard />\n            <NewsGameCard />\n            <NewsGameCard />\n          </div>\n        </div>\n        <style jsx>{`\n          .mainWrapper {\n            display: flex;\n          }\n          .gameListing {\n            flex: 8;\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n          }\n          .newsWrapper {\n            flex: 2;\n          }\n        `}</style>\n      </Layout>\n    );\n  }\n}\n\nexport default Hello;\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Form, Input, Button, Alert } from \"antd\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\nimport { check_login, login_user, showNotification } from \"../utils/user.util\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SignIn(props) {\n  const [loggingIn, setLoggingIn] = useState(false);\n  const [tfaLogin, setTfaLogin] = useState(false);\n  const [tfaId, setTfaId] = useState(\"\");\n  const history = useHistory();\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  useEffect(() => {\n    if (check_login()) {\n      history.push(process.env.PUBLIC_URL);\n    }\n  });\n\n  const loginUser = (values, mode = 1) => {\n    setLoggingIn(true);\n    let apiUrl = G_API_URL + \"user/login\";\n    if (mode === 2) {\n      values[\"auth_id\"] = tfaId;\n      apiUrl = G_API_URL + \"user/tfa-login\";\n    }\n\n    axios\n      .post(apiUrl, values)\n      .then((res) => {\n        setLoggingIn(false);\n        if (res.data.status && !res.data?.data?.auth_id) {\n          showNotification(\"success\", \"You are logged in successfully\");\n          login_user(res.data.data);\n          history.push(process.env.PUBLIC_URL);\n        } else if (res.data?.data?.auth_id) {\n          setTfaLogin(true);\n          setTfaId(res.data?.data?.auth_id);\n        } else\n          showNotification(\n            \"info\",\n            res?.data?.message ??\n              \"Account not found, please check your username or password\"\n          );\n      })\n      .catch(() => {\n        setLoggingIn(false);\n        showNotification();\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout>\n      <div className=\"signInWrapper\">\n        <div style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              background: \"rgb(254, 141, 27) none repeat scroll 0% 0%\",\n              width: \"191px\",\n              height: \"191px\",\n              top: \"30px\",\n              left: \"-12px\",\n              \"border-radius\": \"15px\",\n              \"z-index\": 0,\n            }}\n          ></div>\n          <div className=\"formHolder\">\n            <h2 style={{ \"text-align\": \"center\" }}>Log In</h2>\n            {!tfaLogin ? (\n              <Form\n                name=\"basic\"\n                initialValues={{\n                  remember: true,\n                }}\n                onFinish={(e) => loginUser(e, 1)}\n                onFinishFailed={onFinishFailed}\n              >\n                <Form.Item\n                  name=\"username\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your username!\",\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Username\" />\n                </Form.Item>\n\n                <Form.Item\n                  name=\"password\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your password!\",\n                    },\n                  ]}\n                >\n                  <Input.Password placeholder=\"Password\" />\n                </Form.Item>\n\n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    className=\"primaryBtn-2\"\n                    style={{ width: \"100%\" }}\n                    htmlType=\"submit\"\n                    loading={loggingIn}\n                  >\n                    Log In\n                  </Button>\n                  <br />\n                  <a\n                    onClick={() => {\n                      history.push(process.env.PUBLIC_URL + \"/forget-password\");\n                    }}\n                    className=\"primaryColor\"\n                  >\n                    Forgot Password?\n                  </a>\n                </Form.Item>\n              </Form>\n            ) : (\n              <>\n                <Alert\n                  message=\"PLease enter your 2fa code,  you can use forget password option to reset your 2fa.\"\n                  type=\"warning\"\n                />\n                <div style={{ margin: \"30px\" }} />\n                <Form\n                  name=\"basic\"\n                  initialValues={{\n                    remember: true,\n                  }}\n                  onFinish={(e) => loginUser(e, 2)}\n                  onFinishFailed={onFinishFailed}\n                >\n                  <Form.Item\n                    name=\"code\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your 2fa code!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"2fa code\" />\n                  </Form.Item>\n\n                  <Form.Item>\n                    <Button\n                      type=\"primary\"\n                      className=\"primaryBtn-2\"\n                      style={{ width: \"100%\" }}\n                      htmlType=\"submit\"\n                      loading={loggingIn}\n                    >\n                      Log In\n                    </Button>\n                    <br />\n                    <a\n                      onClick={() => {\n                        history.push(\n                          process.env.PUBLIC_URL + \"/forget-password\"\n                        );\n                      }}\n                      className=\"primaryColor\"\n                    >\n                      Forgot Password?\n                    </a>\n                  </Form.Item>\n                </Form>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .signInWrapper {\n            display: flex;\n            justify-content: center;\n          }\n          .formHolder {\n            position: relative;\n            width: 500px;\n            background: #ffffff;\n            padding: 100px 50px;\n            box-shadow: rgba(200, 200, 200, 0.63) 2px 2px 7px 2px;\n            margin-top: 40px;\n            border-radius: 15px;\n            z-index: 0;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Form, Input, Button } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\nimport { check_login, login_user, showNotification } from \"../utils/user.util\";\n\nexport default function SignUp(props) {\n  const history = useHistory();\n  const [loggingIn, setLoggingIn] = useState(false);\n\n  useEffect(() => {\n    if (check_login()) {\n      history.push(process.env.PUBLIC_URL);\n    }\n  });\n\n  const regiterUser = (values) => {\n    setLoggingIn(true);\n    axios\n      .post(G_API_URL + \"user/signup\", values)\n      .then((res) => {\n        setLoggingIn(false);\n        if (res.data.status) {\n          showNotification(\n            \"success\",\n            \"Account created successfully, please check your mail to verify your account\"\n          );\n          history.push(process.env.PUBLIC_URL + \"/login\");\n        } else\n          showNotification(\n            \"info\",\n            res.data.message ?? \"Unable to create account\"\n          );\n      })\n      .catch(() => {\n        setLoggingIn(false);\n        showNotification();\n      });\n  };\n\n  return (\n    <Layout>\n      <div className=\"signUpWrapper\">\n        <div\n          style={{\n            position: \"relative\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              background: \"rgb(254, 141, 27) none repeat scroll 0% 0%\",\n              width: \"191px\",\n              height: \"191px\",\n              top: \"30px\",\n              left: \"-12px\",\n              \"border-radius\": \"15px\",\n              \"z-index\": 0,\n            }}\n          ></div>\n          <div className=\"formHolder\">\n            <h2 style={{ \"text-align\": \"center\" }}>Register</h2>\n            <Form\n              name=\"basic\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={regiterUser}\n            >\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    type: \"email\",\n                    message: \"Please enter a valid email\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Email\" />\n              </Form.Item>\n              <Form.Item\n                name=\"first_name\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your First Name!\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"First Name\" />\n              </Form.Item>\n              <Form.Item\n                name=\"last_name\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your Last Name!\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Last Name\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your password!\",\n                  },\n                ]}\n              >\n                <Input.Password placeholder=\"Password\" />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  className=\"primaryBtn-2\"\n                  style={{ width: \"100%\" }}\n                  htmlType=\"submit\"\n                  loading={loggingIn}\n                >\n                  Register\n                </Button>\n                <br />\n                <a\n                  onClick={() => {\n                    history.push(process.env.PUBLIC_URL + \"/login\");\n                  }}\n                  className=\"primaryColor\"\n                >\n                  Return to Login\n                </a>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .signUpWrapper {\n            display: flex;\n            justify-content: center;\n          }\n          .formHolder {\n            position: relative;\n            width: 500px;\n            background: #ffffff;\n            padding: 100px 50px;\n            box-shadow: rgba(200, 200, 200, 0.63) 2px 2px 7px 2px;\n            margin-top: 40px;\n            border-radius: 15px;\n            z-index: 0;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\nimport { check_login, login_user, showNotification } from \"../utils/user.util\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function ForgetPassword(props) {\n  const [loggingIn, setLoggingIn] = useState(false);\n  const history = useHistory();\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  useEffect(() => {\n    if (check_login()) {\n      history.push(process.env.PUBLIC_URL);\n    }\n  });\n\n  const restorePassword = (values) => {\n    setLoggingIn(true);\n    axios\n      .post(G_API_URL + \"user/forget-password\", values)\n      .then((res) => {\n        setLoggingIn(false);\n        if (res.data.status) {\n          showNotification(\"success\", \"Password reset link sent successfully\");\n          history.push(process.env.PUBLIC_URL + \"/login\");\n        } else showNotification(\"info\", \"Account not found\");\n      })\n      .catch(() => {\n        setLoggingIn(false);\n        showNotification();\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout>\n      <div className=\"forgetPasswordWrapper\">\n        <div style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              background: \"rgb(254, 141, 27) none repeat scroll 0% 0%\",\n              width: \"191px\",\n              height: \"191px\",\n              top: \"30px\",\n              left: \"-12px\",\n              \"border-radius\": \"15px\",\n              \"z-index\": 0,\n            }}\n          ></div>\n          <div className=\"formHolder\">\n            <h2 style={{ \"text-align\": \"center\" }}>Reset Password</h2>\n            <Form\n              name=\"basic\"\n              onFinish={restorePassword}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your username!\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Username\" />\n              </Form.Item>\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  className=\"primaryBtn-2\"\n                  style={{ width: \"100%\" }}\n                  htmlType=\"submit\"\n                  loading={loggingIn}\n                >\n                  Reset Password\n                </Button>\n                <br />\n                <a\n                  onClick={() => {\n                    history.push(process.env.PUBLIC_URL + \"/login\");\n                  }}\n                  className=\"primaryColor\"\n                >\n                  Return to Login\n                </a>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .forgetPasswordWrapper {\n            display: flex;\n            justify-content: center;\n          }\n          .formHolder {\n            position: relative;\n            width: 500px;\n            background: #ffffff;\n            padding: 100px 50px;\n            box-shadow: rgba(200, 200, 200, 0.63) 2px 2px 7px 2px;\n            margin-top: 40px;\n            border-radius: 15px;\n            z-index: 0;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\nimport { check_login, getToken, showNotification } from \"../utils/user.util\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function ChangePassword(props) {\n  const [loggingIn, setLoggingIn] = useState(false);\n  const history = useHistory();\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  useEffect(() => {\n    if (!check_login()) {\n      history.push(process.env.PUBLIC_URL + \"login\");\n    }\n  });\n\n  const ChangePass = (values) => {\n    setLoggingIn(true);\n    axios\n      .post(G_API_URL + \"user/change-password\", values, {\n        headers: {\n          Authorization: getToken(),\n        },\n      })\n      .then((res) => {\n        setLoggingIn(false);\n        if (res.data.status) {\n          showNotification(\"success\", \"Password Changed Successfully\");\n          history.push(process.env.PUBLIC_URL);\n        } else\n          showNotification(\n            \"info\",\n            res?.data?.message ?? \"Unable to change password\"\n          );\n      })\n      .catch(() => {\n        setLoggingIn(false);\n        showNotification();\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout>\n      <div className=\"changePassWrapper\">\n        <div style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              background: \"rgb(254, 141, 27) none repeat scroll 0% 0%\",\n              width: \"191px\",\n              height: \"191px\",\n              top: \"30px\",\n              left: \"-12px\",\n              \"border-radius\": \"15px\",\n              \"z-index\": 0,\n            }}\n          ></div>\n          <div className=\"formHolder\">\n            <h2 style={{ \"text-align\": \"center\" }}>Change Password</h2>\n            <Form\n              name=\"basic\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={ChangePass}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                name=\"old_pass\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your old password!\",\n                  },\n                ]}\n              >\n                <Input.Password placeholder=\"Olp Password\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"new_pass\"\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your new password!\",\n                  },\n                  { min: 5, message: \"Username must be minimum 5 characters.\" },\n                ]}\n              >\n                <Input.Password min={5} placeholder=\"New Password\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"confirm_password\"\n                dependencies={[\"new_pass\"]}\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your new password!\",\n                  },\n                  ({ getFieldValue }) => ({\n                    validator(rule, value) {\n                      if (!value || getFieldValue(\"new_pass\") === value) {\n                        return Promise.resolve();\n                      }\n                      return Promise.reject(\n                        \"The two passwords that you entered do not match!\"\n                      );\n                    },\n                  }),\n                ]}\n              >\n                <Input.Password placeholder=\"Confirm New Password\" />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  className=\"primaryBtn-2\"\n                  style={{ width: \"100%\" }}\n                  htmlType=\"submit\"\n                  loading={loggingIn}\n                >\n                  Log In\n                </Button>\n                <br />\n                <a\n                  onClick={() => {\n                    history.push(process.env.PUBLIC_URL + \"/forget-password\");\n                  }}\n                  className=\"primaryColor\"\n                >\n                  Forgot Password?\n                </a>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .changePassWrapper {\n            display: flex;\n            justify-content: center;\n          }\n          .formHolder {\n            position: relative;\n            width: 500px;\n            background: #ffffff;\n            padding: 100px 50px;\n            box-shadow: rgba(200, 200, 200, 0.63) 2px 2px 7px 2px;\n            margin-top: 40px;\n            border-radius: 15px;\n            z-index: 0;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport axios from \"axios\";\nimport { G_API_URL, G_HOME_URL } from \"../constants/constants\";\nimport { check_login, showNotification } from \"../utils/user.util\";\nimport { useHistory } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nexport default function VerifyAccount(props) {\n  const history = useHistory();\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  useEffect(() => {\n    if (check_login()) {\n      history.push(process.env.PUBLIC_URL);\n    }\n    let params = queryString.parse(props.location.search);\n    verifyUser({\n      username: params.u_name,\n      v_code: params.vcode,\n    });\n  });\n\n  const verifyUser = (values) => {\n    axios\n      .post(G_API_URL + \"user/verify\", values)\n      .then((res) => {\n        if (res.data.status) {\n          showNotification(\"success\", \"Account Successfully Verified\");\n          window.location = G_HOME_URL + \"login\";\n        } else showNotification(\"info\", \"Invalid or expired verification code\");\n      })\n      .catch(() => {\n        showNotification();\n      });\n  };\n\n  return (\n    <Layout>\n      <div className=\"verification\"></div>\n      <style jsx>{``}</style>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Button } from \"antd\";\nimport notfound from \"../assets/imgs/404.png\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function NotFound(props) {\n  const history = useHistory();\n\n  return (\n    <Layout>\n      <div className=\"notFoundWrapper\">\n        <div style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              background: \"rgb(254, 141, 27) none repeat scroll 0% 0%\",\n              width: \"191px\",\n              height: \"191px\",\n              top: \"30px\",\n              left: \"-12px\",\n              \"border-radius\": \"15px\",\n              \"z-index\": 0,\n            }}\n          ></div>\n          <div className=\"formHolder\">\n            <img\n              src={notfound}\n              height={300}\n              width={300}\n              style={{ \"align-self\": \"center\" }}\n            />\n            <Button\n              type=\"primary\"\n              className=\"primaryBtn-2\"\n              style={{ width: \"100%\" }}\n              onClick={() => {\n                history.replace(\"/\");\n              }}\n            >\n              Go to home page.\n            </Button>\n          </div>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .notFoundWrapper {\n            display: flex;\n            justify-content: center;\n          }\n          .formHolder {\n            position: relative;\n            width: 500px;\n            background: #ffffff;\n            padding: 100px 50px;\n            box-shadow: rgba(200, 200, 200, 0.63) 2px 2px 7px 2px;\n            margin-top: 40px;\n            border-radius: 15px;\n            z-index: 0;\n            display: flex;\n            flex-direction: column;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\nimport { check_login, getToken, showNotification } from \"../utils/user.util\";\nimport { useHistory } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nexport default function ResetPassword(props) {\n  const [loggingIn, setLoggingIn] = useState(false);\n  const history = useHistory();\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  useEffect(() => {\n    if (check_login()) {\n      history.push(process.env.PUBLIC_URL);\n    }\n  });\n\n  const ChangePass = (values) => {\n    setLoggingIn(true);\n    let params = queryString.parse(props.location.search);\n    axios\n      .post(\n        G_API_URL + \"user/reset-password\",\n        { ...values, ...{ r_code: params.r_code } },\n        {\n          headers: {\n            Authorization: getToken(),\n          },\n        }\n      )\n      .then((res) => {\n        setLoggingIn(false);\n        if (res.data.status) {\n          showNotification(\"success\", \"Password Changed Successfully\");\n          history.replace(\"/login\");\n        } else\n          showNotification(\n            \"info\",\n            res?.data?.message ?? \"Unable to reset password\"\n          );\n      })\n      .catch(() => {\n        setLoggingIn(false);\n        showNotification();\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout>\n      <div className=\"resetPassWrapper\">\n        <div style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              background: \"rgb(254, 141, 27) none repeat scroll 0% 0%\",\n              width: \"191px\",\n              height: \"191px\",\n              top: \"30px\",\n              left: \"-12px\",\n              \"border-radius\": \"15px\",\n              \"z-index\": 0,\n            }}\n          ></div>\n          <div className=\"formHolder\">\n            <h2 style={{ \"text-align\": \"center\" }}>Reset Password</h2>\n            <Form\n              name=\"basic\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={ChangePass}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                name=\"password\"\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your new password!\",\n                  },\n                  { min: 5, message: \"Username must be minimum 5 characters.\" },\n                ]}\n              >\n                <Input.Password min={5} placeholder=\"New Password\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"confirm_password\"\n                dependencies={[\"password\"]}\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your new password!\",\n                  },\n                  ({ getFieldValue }) => ({\n                    validator(rule, value) {\n                      if (!value || getFieldValue(\"password\") === value) {\n                        return Promise.resolve();\n                      }\n                      return Promise.reject(\n                        \"The two passwords that you entered do not match!\"\n                      );\n                    },\n                  }),\n                ]}\n              >\n                <Input.Password placeholder=\"Confirm New Password\" />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  className=\"primaryBtn-2\"\n                  style={{ width: \"100%\" }}\n                  htmlType=\"submit\"\n                  loading={loggingIn}\n                >\n                  Log In\n                </Button>\n                <br />\n                <a\n                  onClick={() => {\n                    history.replace(\"/login\");\n                  }}\n                  className=\"primaryColor\"\n                >\n                  Go back to login\n                </a>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .resetPassWrapper {\n            display: flex;\n            justify-content: center;\n          }\n          .formHolder {\n            position: relative;\n            width: 500px;\n            background: #ffffff;\n            padding: 100px 50px;\n            box-shadow: rgba(200, 200, 200, 0.63) 2px 2px 7px 2px;\n            margin-top: 40px;\n            border-radius: 15px;\n            z-index: 0;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Form, Input, Button, Modal } from \"antd\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\nimport { check_login, getToken, showNotification } from \"../utils/user.util\";\nimport { useHistory } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nexport default function EnableTfa(props) {\n  const [loggingIn, setLoggingIn] = useState(false);\n  const [tfaModalVisible, setTfaModalVisible] = useState(false);\n  const [tfaQr, setTfaQr] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!check_login()) {\n      history.replace(\"/login\");\n    }\n  });\n\n  const enableTfaInit = () => {\n    axios\n      .put(\n        G_API_URL + \"user/tfa\",\n        {},\n        {\n          headers: {\n            Authorization: getToken(),\n          },\n        }\n      )\n      .then((res) => {\n        if (res.data.status) {\n          setTfaQr(res.data.img);\n          setTfaModalVisible(true);\n        }\n      })\n      .catch(() => {});\n  };\n\n  const validateTfa = (val) => {\n    axios\n      .put(G_API_URL + \"user/verify-tfa\", val, {\n        headers: {\n          Authorization: getToken(),\n        },\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status) {\n          setTfaModalVisible(false);\n          setTfaQr(false);\n          showNotification(\"success\", \"2fa enabled successfully\");\n        } else showNotification(\"info\", res.data.message);\n      });\n  };\n\n  return (\n    <Layout>\n      <Modal\n        title=\"Enable 2fa\"\n        visible={tfaModalVisible}\n        onCancel={() => {\n          setTfaModalVisible(false);\n          setTfaQr(\"\");\n        }}\n        footer={null}\n      >\n        <Form\n          name=\"tfaForm\"\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={validateTfa}\n          style={{\n            \"text-align\": \"center\",\n          }}\n        >\n          <img src={tfaQr} height={150} width={150}></img>\n          <Form.Item\n            name=\"code\"\n            rules={[\n              {\n                required: true,\n                message: \"2fa code is required\",\n              },\n            ]}\n          >\n            <Input style={{ width: 170 }} placeholder=\"Input 2fa code\" />\n          </Form.Item>\n\n          <Button htmlType=\"submit\">Verify & Setup 2fa</Button>\n        </Form>\n      </Modal>\n      <div className=\"tfaWrapper\">\n        <div style={{ position: \"relative\" }}>\n          <Button loading={loggingIn} onClick={enableTfaInit}>\n            Enable 2fa\n          </Button>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .tfaWrapper {\n            display: flex;\n            justify-content: center;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { render } from \"react-dom\";\nimport './index.css';\nimport Hello from \"./pages/index\";\nimport SignIn from \"./pages/login\";\nimport SignUp from \"./pages/signUp\";\nimport ForgetPassword from \"./pages/forgetPassword\";\nimport 'antd/dist/antd.css'\nimport ChangePassword from \"./pages/changePassword\";\nimport VerifyAccount from \"./pages/verifyAccount\";\nimport NotFound from \"./pages/notFound\";\nimport ResetPassword from \"./pages/resetPassword\";\nimport EnableTfa from \"./pages/enableTfa\";\n\nfunction App() {\n    return (\n        <Switch>\n            <Route path={`${process.env.PUBLIC_URL}/`} exact component={Hello} />\n            <Route path={`${process.env.PUBLIC_URL}/login`} exact component={SignIn} />\n            <Route path={`${process.env.PUBLIC_URL}/signup`} exact component={SignUp} />\n            <Route path={`${process.env.PUBLIC_URL}/forget-password`} exact component={ForgetPassword} />\n            <Route path={`${process.env.PUBLIC_URL}/verify-account`} exact component={VerifyAccount} />\n            <Route path={`${process.env.PUBLIC_URL}/change-password`} exact component={ChangePassword} />\n            <Route path={`${process.env.PUBLIC_URL}/reset-password`} exact component={ResetPassword} />\n            <Route path={`${process.env.PUBLIC_URL}/enable-tfa`} exact component={EnableTfa} />\n            <Route exact component={NotFound} />\n        </Switch>\n    );\n}\n\nrender(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}