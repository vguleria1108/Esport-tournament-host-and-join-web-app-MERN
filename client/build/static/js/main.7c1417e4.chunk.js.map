{"version":3,"sources":["assets/imgs/404.png","constants/constants.js","utils/user.util.js","components/cardComp/gameCard.jsx","components/cardComp/newsGameCardWrapper.jsx","components/LayoutComps/Header.js","components/LayoutComps/Footer.js","components/LayoutComps/Layout.js","pages/index.jsx","pages/login.jsx","pages/signUp.jsx","pages/forgetPassword.jsx","pages/changePassword.jsx","pages/verifyAccount.jsx","pages/notFound.jsx","pages/resetPassword.jsx","pages/enableTfa.jsx","pages/createGame.jsx","index.js"],"names":["module","exports","G_API_URL","process","showNotification","type","msg","notification","message","duration","login_user","data","user_token","localStorage","setItem","check_login","getItem","getToken","GameCard","props","history","useHistory","style","position","width","height","margin","onClick","push","className","src","image","name","description","author","slots","jsx","NewsGameCard","display","flex","Header","to","axios","post","headers","then","res","catch","console","log","clear","setTimeout","window","location","href","Footer","Component","Layout","state","flexDirection","this","children","Hello","activityDrawer","gameData","loading","get","status","setState","tip","spinning","length","map","item","game_name","game_type","game_image","start_time","game_description","visible","onClose","SignIn","useState","loggingIn","setLoggingIn","tfaLogin","setTfaLogin","tfaId","setTfaId","useEffect","loginUser","values","mode","apiUrl","auth_id","onFinishFailed","errorInfo","background","top","left","initialValues","remember","onFinish","e","Item","rules","required","placeholder","htmlType","Password","SignUp","ForgetPassword","ChangePassword","Authorization","hasFeedback","min","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","VerifyAccount","params","queryString","parse","search","verifyUser","username","u_name","v_code","vcode","G_HOME_URL","NotFound","notfound","replace","ResetPassword","r_code","EnableTfa","tfaModalVisible","setTfaModalVisible","tfaQr","setTfaQr","title","onCancel","footer","val","put","img","CreateGame","fileList","setFileList","onGameCreateInit","a","file","imageFileToBase64","base64","Date","game_time","getTime","uploadProps","onRemove","index","indexOf","newFileList","slice","splice","beforeUpload","TextArea","rows","RangePicker","showTime","label","onChange","checkedChildren","unCheckedChildren","App","path","exact","component","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c1417e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.d64adc8a.png\";","export const G_HOME_URL = process.env.REACT_APP_G_HOME_URL;\nexport const G_API_URL = process.env.REACT_APP_G_API_URL;\n","import { notification } from \"antd\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\n\nconst showNotification = (type = \"error\", msg = \"Something went wrong\") => {\n    notification[type]({\n        message: msg,\n        duration: 2\n    });\n};\n\n\nconst login_user = (data) => {\n    if (data?.user_token) {\n        localStorage.setItem(\"u_token\", data.user_token)\n    }\n};\n\nconst check_login = () => {\n    if (localStorage.getItem(\"u_token\"))\n        return true;\n    return false;\n};\n\nconst logout_user = () => {\n    axios.post(G_API_URL + \"user/logout\", {}, {\n        headers: {\n            'Authorization': getToken()\n        }\n    }).then((res) => {\n        showNotification(\"success\", \"You are logged out successfully\")\n    }).catch(() => {\n        console.log(\"Unable to invalidate token, clearing token from localstorage\")\n    });\n    localStorage.clear();\n    setTimeout(() => {\n        window.location.href = process.env.PUBLIC_URL + '/login';\n    }, 1500)\n};\n\nconst getToken = () => {\n    return localStorage.getItem(\"u_token\")\n};\n\nexport { login_user, check_login, logout_user, showNotification, getToken };\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { check_login, showNotification } from \"../../utils/user.util\";\n\nconst GameCard = (props) => {\n  const history = useHistory();\n  const handleGameCardClick = () => {\n    if (!check_login()) {\n      showNotification(\"info\", \"You need to login to join a game\");\n      history.push(process.env.PUBLIC_URL + \"login\");\n    } else showNotification(\"info\", \"Oops unable to join game\");\n  };\n  return (\n    <>\n      <div\n        style={{\n          position: \"relative\",\n          width: \"max-content\",\n          height: \"max-content\",\n          margin: \"20px\",\n        }}\n        onClick={handleGameCardClick}\n      >\n        <div className=\"bottomBox\"></div>\n        <div className=\"gameCardWrapper\">\n          <img src={props.image} className=\"gameImg\" />\n          <div className=\"gameName\">\n            <h3>{props.name}</h3>|<span>Public</span>\n          </div>\n\n          <span className=\"gameDesc\">{props.description}</span>\n          <div className=\"gameInfo\">\n            <span>By: {props.author}</span>|\n            <span>{props.slots ?? 100} Slots Left</span>\n          </div>\n        </div>\n      </div>\n\n      <style jsx>{`\n        .gameCardWrapper {\n          display: flex;\n          flex-direction: column;\n          border: 0px solid;\n          box-shadow: rgba(200, 200, 200, 0.63) 1px 1px 4px 1px;\n          height: 330px;\n          width: 250px;\n          border-top-color: #fe8d1b;\n          border-top-width: 8px;\n          border-radius: 15px;\n          position: relative;\n          background: #ffffff;\n          z-index: 2;\n          padding: 10px;\n          justify-content: space-between;\n          cursor: pointer;\n        }\n        .gameImg {\n          height: 140px;\n        }\n        .gameInfo,\n        .gameName {\n          display: flex;\n          justify-content: space-around;\n        }\n        .gameDesc {\n          height: 90px;\n          overflow: hidden;\n        }\n        .bottomBox {\n          position: absolute;\n          background: rgb(254, 141, 27) none repeat scroll 0% 0%;\n          width: 50px;\n          height: 50px;\n          bottom: -8px;\n          left: -8px;\n          border-radius: 15px;\n          z-index: 0;\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default GameCard;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst NewsGameCard = (props) => {\n  const history = useHistory();\n  return (\n    <>\n      <div className=\"newsgameCardWrapper\">\n        <img\n          src=\"https://s1.gaming-cdn.com/images/products/1995/271x377/playerunknowns-battlegrounds-cover.jpg\"\n          className=\"gameImg\"\n        />\n        <div className=\"gameInfo\">\n          <div style={{ display: \"flex\", width: \"100%\" }}>\n            <h3 style={{ flex: 3 }}>Pubg Tournament</h3>\n            <span className=\"gameStatus\">44 min Left</span>\n          </div>\n          <span className=\"gameDesc\">\n            This is description This is descriptionThis is description This is\n            description This is description This is description This is\n            description This is description This is description\n          </span>\n        </div>\n      </div>\n      <style jsx>{`\n        .newsgameCardWrapper {\n          display: flex;\n          border: 0px solid;\n          box-shadow: rgba(200, 200, 200, 0.63) 1px 1px 4px 1px;\n          height: 110px;\n          width: 364px;\n          border-top-color: #fe8d1b;\n          border-top-width: 8px;\n          border-radius: 15px;\n          background: #ffffff;\n          z-index: 2;\n          padding: 10px;\n          cursor: pointer;\n          margin: 10px;\n        }\n        .newsgameCardWrapper .gameImg {\n          height: 65px;\n          width: 65px;\n          flex: 1;\n          align-self: center;\n        }\n        .newsgameCardWrapper .gameInfo {\n          display: flex;\n          padding: 2px;\n          flex-direction: column;\n          flex: 3;\n        }\n        .newsgameCardWrapper .gameStatus {\n          flex: 2;\n          text-align: end;\n        }\n        .newsgameCardWrapper .gameDesc {\n          overflow: hidden;\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default NewsGameCard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom';\nimport { check_login, logout_user } from \"../../utils/user.util\"\n\nconst menu = (\n    <>\n        <div className=\"profile-menu-container\">\n\n            <div\n                className=\"menu-item\"\n            >\n                Profile\n            </div>\n\n            <div\n                className=\"menu-item\"\n            >\n                Change Password\n            </div>\n            <div className=\"menu-item logout-btn\">\n                Logout\n            </div>\n        </div>\n    </>\n);\n\nconst Header = props => {\n    const history = useHistory();\n    return (\n        <>\n            <div className=\"navbar-container\">\n                <div className=\"right-container\">\n                    <div\n                        className=\"brand-logo\"\n                    >\n                        <Link to={process.env.PUBLIC_URL}>\n                            Logo\n                        </Link>\n                    </div>\n                </div>\n                {!check_login() ?\n                    <div className=\"loggedOutStateOpt\" style={{ display: 'flex' }}>\n                        <div className=\"loginBtn primaryBtn-1\" onClick={() => history.push(process.env.PUBLIC_URL + '/login')}>\n                            Log In\n                    </div>\n                        <div className=\"signUpBtn primaryBtn-2\" onClick={() => history.push(process.env.PUBLIC_URL + '/signup')}>\n                            Sign Up\n                    </div>\n                    </div> : <div className=\"primaryBtn-1\" onClick={() => { logout_user() }}>Log Out</div>}\n\n            </div>\n\n            <style jsx>\n                {`\n                    .navbar-container {\n                        height: 54px;\n                        background: #ffffff;\n                        box-shadow: 0px 5px 11px 0px rgba(50,50,50,0.08);\n                        position: fixed;\n                        top: 0;\n                        left: 0;\n                        right: 0;\n                        z-index: 1000;\n                        padding-right: 30px;\n                        padding-left: 30px;\n                        align-items: center;\n                        display: flex;\n                        justify-content: space-between;\n                    }\n                    .navbar-container .brand-logo {\n                        margin-right: 2.4rem;\n                    }\n                    .loginBtn, .signUpBtn{\n                        height: 35px;\n                    }\n                `}\n            </style>\n        </>\n    );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class Footer extends Component {\n    render() {\n        return (\n            <>\n                <div className=\"footer-container\">\n                    <div className=\"footer-copyrights\">\n                        &copy; VG\n                    </div>\n                </div>\n                <style jsx>\n                    {`\n                        .footer-container{\n                            color: #ffffff;\n                            background: black;\n                            position: relative;\n                            left: 0;\n                            right: 0;\n                            bottom: 0;\n                            padding: 50px;\n                            height: 100%;\n                           }\n                        .footer-copyrights {\n                            text-align: center;\n                        }\n                    `}\n                </style>\n            </>\n        );\n    }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\n\nexport class Layout extends Component {\n    constructor() {\n        super();\n        this.state = {\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        return (\n            <>\n                <div style={{ \"height\": '100%', display: 'flex', flexDirection: \"column\" }}>\n                    <div style={{ 'flex': 1 }}>\n                        <Header />\n                    </div>\n                    <div className=\"layoutBody\" >\n                        {this.props.children}\n                    </div>\n                    <div style={{ 'flex': 1 }}>\n                        <Footer />\n                    </div>\n                </div>\n                <style jsx>{\n                    `\n                    #root{\n                        height: 100%;\n                    }\n                    .layoutBody {\n                        padding: 50px;\n                        flex: 8;\n                     }\n                    @media screen and (max-width: 600px) {\n                        .layoutBody {\n                            padding-right: 0px;\n                            padding-left: 0px;\n                        }\n                     }\n                    `\n                }\n                </style>\n            </>\n        );\n    }\n}\n\nexport default Layout;\n","import React, { Component } from \"react\";\nimport GameCard from \"../components/cardComp/gameCard\";\nimport NewsGameCard from \"../components/cardComp/newsGameCardWrapper\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Drawer, Button } from \"antd\";\nimport { check_login, showNotification } from \"../utils/user.util\";\nimport { G_API_URL } from \"../constants/constants\";\nimport axios from \"axios\";\nimport { Spin } from \"antd\";\nclass Hello extends Component {\n  state = {\n    activityDrawer: false,\n    gameData: [],\n    loading: true,\n  };\n\n  componentDidMount() {\n    let apiUrl = G_API_URL + \"game/\";\n    axios\n      .get(apiUrl)\n      .then((res) => {\n        if (res.data.status && res.data?.data) {\n          console.log(res.data.data, \"ddd\");\n          this.setState({\n            gameData: res.data.data,\n            loading: false,\n          });\n        } else showNotification(\"error\", \"Unable to fetch games\");\n      })\n      .catch(() => {\n        showNotification(\"error\", \"Unable to fetch games\");\n      });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Spin tip=\"Fetching games...\" spinning={this.state.loading}>\n          <div className=\"mainWrapper\">\n            <div className=\"gameListing\">\n              {this.state.gameData && this.state.gameData.length > 0\n                ? this.state.gameData.map((item) => (\n                    <GameCard\n                      name={item.game_name}\n                      type={item.game_type}\n                      image={item.game_image}\n                      start_time={item.start_time}\n                      description={item.game_description}\n                      author=\"Vikrant\"\n                    />\n                  ))\n                : \"\"}\n            </div>\n            {check_login() ? (\n              <>\n                <Drawer\n                  visible={this.state.activityDrawer}\n                  onClose={() => this.setState({ activityDrawer: false })}\n                  className=\"my-drawer\"\n                >\n                  <NewsGameCard />\n                </Drawer>\n                <Button\n                  className=\"floatBtn\"\n                  onClick={() => {\n                    this.setState({\n                      activityDrawer: !this.state.activityDrawer,\n                    });\n                  }}\n                >\n                  My Activity\n                </Button>\n              </>\n            ) : (\n              \"\"\n            )}\n          </div>\n          <style jsx>{`\n            .mainWrapper {\n              display: flex;\n            }\n            .gameListing {\n              flex: 8;\n              display: grid;\n              grid-template-columns: repeat(auto-fill, minmax(250px, auto));\n            }\n            .floatBtn {\n              position: fixed;\n              width: 125px;\n              height: 60px;\n              bottom: 40px;\n              right: 40px;\n              background-color: #0c9;\n              color: #fff;\n              border-radius: 50px;\n              text-align: center;\n              box-shadow: 2px 2px 3px #999;\n              z-index: 10;\n            }\n            .ant-drawer-content-wrapper {\n              width: 456px !important;\n            }\n\n            @media screen and (max-width: 600px) {\n              .gameCardWrapper {\n                width: 200px;\n                height: 300px;\n                font-size: 12px;\n              }\n              .gameListing {\n                grid-template-columns: repeat(auto-fill, minmax(200px, auto));\n              }\n              .floatBtn {\n                width: 80px;\n                height: 42px;\n                font-size: 11px;\n              }\n              .ant-drawer-content-wrapper {\n                width: 100% !important;\n              }\n              .newsgameCardWrapper {\n                height: 78px !important;\n                width: 308px !important;\n              }\n            }\n            @media screen and (max-width: 400px) {\n              .gameCardWrapper {\n                width: 160px;\n                height: 240px;\n                font-size: 10px;\n              }\n              .gameListing {\n                grid-template-columns: repeat(auto-fill, minmax(160px, auto));\n              }\n              .layoutBody {\n                padding-right: 15px !important;\n                padding-left: 0px !important;\n              }\n              .bottomBox {\n                visibility: hidden;\n              }\n            }\n          `}</style>\n        </Spin>\n      </Layout>\n    );\n  }\n}\n\nexport default Hello;\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Form, Input, Button, Alert } from \"antd\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\nimport { check_login, login_user, showNotification } from \"../utils/user.util\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SignIn(props) {\n  const [loggingIn, setLoggingIn] = useState(false);\n  const [tfaLogin, setTfaLogin] = useState(false);\n  const [tfaId, setTfaId] = useState(\"\");\n  const history = useHistory();\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  useEffect(() => {\n    if (check_login()) {\n      history.push(process.env.PUBLIC_URL);\n    }\n  });\n\n  const loginUser = (values, mode = 1) => {\n    setLoggingIn(true);\n    let apiUrl = G_API_URL + \"user/login\";\n    if (mode === 2) {\n      values[\"auth_id\"] = tfaId;\n      apiUrl = G_API_URL + \"user/tfa-login\";\n    }\n\n    axios\n      .post(apiUrl, values)\n      .then((res) => {\n        setLoggingIn(false);\n        if (res.data.status && !res.data?.data?.auth_id) {\n          showNotification(\"success\", \"You are logged in successfully\");\n          login_user(res.data.data);\n          history.push(process.env.PUBLIC_URL);\n        } else if (res.data?.data?.auth_id) {\n          setTfaLogin(true);\n          setTfaId(res.data?.data?.auth_id);\n        } else\n          showNotification(\n            \"info\",\n            res?.data?.message ??\n              \"Account not found, please check your username or password\"\n          );\n      })\n      .catch(() => {\n        setLoggingIn(false);\n        showNotification();\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout>\n      <div className=\"signInWrapper\">\n        <div style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              background: \"rgb(254, 141, 27) none repeat scroll 0% 0%\",\n              width: \"191px\",\n              height: \"191px\",\n              top: \"30px\",\n              left: \"-12px\",\n              \"border-radius\": \"15px\",\n              \"z-index\": 0,\n            }}\n          ></div>\n          <div className=\"formHolder\">\n            <h2 style={{ \"text-align\": \"center\" }}>Log In</h2>\n            {!tfaLogin ? (\n              <Form\n                name=\"basic\"\n                initialValues={{\n                  remember: true,\n                }}\n                onFinish={(e) => loginUser(e, 1)}\n                onFinishFailed={onFinishFailed}\n              >\n                <Form.Item\n                  name=\"username\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your username!\",\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Username\" />\n                </Form.Item>\n\n                <Form.Item\n                  name=\"password\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your password!\",\n                    },\n                  ]}\n                >\n                  <Input.Password placeholder=\"Password\" />\n                </Form.Item>\n\n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    className=\"primaryBtn-2\"\n                    style={{ width: \"100%\" }}\n                    htmlType=\"submit\"\n                    loading={loggingIn}\n                  >\n                    Log In\n                  </Button>\n                  <br />\n                  <a\n                    onClick={() => {\n                      history.push(process.env.PUBLIC_URL + \"/forget-password\");\n                    }}\n                    className=\"primaryColor\"\n                  >\n                    Forgot Password?\n                  </a>\n                </Form.Item>\n              </Form>\n            ) : (\n              <>\n                <Alert\n                  message=\"PLease enter your 2fa code,  you can use forget password option to reset your 2fa.\"\n                  type=\"warning\"\n                />\n                <div style={{ margin: \"30px\" }} />\n                <Form\n                  name=\"basic\"\n                  initialValues={{\n                    remember: true,\n                  }}\n                  onFinish={(e) => loginUser(e, 2)}\n                  onFinishFailed={onFinishFailed}\n                >\n                  <Form.Item\n                    name=\"code\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your 2fa code!\",\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"2fa code\" />\n                  </Form.Item>\n\n                  <Form.Item>\n                    <Button\n                      type=\"primary\"\n                      className=\"primaryBtn-2\"\n                      style={{ width: \"100%\" }}\n                      htmlType=\"submit\"\n                      loading={loggingIn}\n                    >\n                      Log In\n                    </Button>\n                    <br />\n                    <a\n                      onClick={() => {\n                        history.push(\n                          process.env.PUBLIC_URL + \"/forget-password\"\n                        );\n                      }}\n                      className=\"primaryColor\"\n                    >\n                      Forgot Password?\n                    </a>\n                  </Form.Item>\n                </Form>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .signInWrapper {\n            display: flex;\n            justify-content: center;\n          }\n          .formHolder {\n            position: relative;\n            width: 500px;\n            background: #ffffff;\n            padding: 100px 50px;\n            box-shadow: rgba(200, 200, 200, 0.63) 2px 2px 7px 2px;\n            margin-top: 40px;\n            border-radius: 15px;\n            z-index: 0;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Form, Input, Button } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\nimport { check_login, login_user, showNotification } from \"../utils/user.util\";\n\nexport default function SignUp(props) {\n  const history = useHistory();\n  const [loggingIn, setLoggingIn] = useState(false);\n\n  useEffect(() => {\n    if (check_login()) {\n      history.push(process.env.PUBLIC_URL);\n    }\n  });\n\n  const regiterUser = (values) => {\n    setLoggingIn(true);\n    axios\n      .post(G_API_URL + \"user/signup\", values)\n      .then((res) => {\n        setLoggingIn(false);\n        if (res.data.status) {\n          showNotification(\n            \"success\",\n            \"Account created successfully, please check your mail to verify your account\"\n          );\n          history.push(process.env.PUBLIC_URL + \"/login\");\n        } else\n          showNotification(\n            \"info\",\n            res.data.message ?? \"Unable to create account\"\n          );\n      })\n      .catch(() => {\n        setLoggingIn(false);\n        showNotification();\n      });\n  };\n\n  return (\n    <Layout>\n      <div className=\"signUpWrapper\">\n        <div\n          style={{\n            position: \"relative\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              background: \"rgb(254, 141, 27) none repeat scroll 0% 0%\",\n              width: \"191px\",\n              height: \"191px\",\n              top: \"30px\",\n              left: \"-12px\",\n              \"border-radius\": \"15px\",\n              \"z-index\": 0,\n            }}\n          ></div>\n          <div className=\"formHolder\">\n            <h2 style={{ \"text-align\": \"center\" }}>Register</h2>\n            <Form\n              name=\"basic\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={regiterUser}\n            >\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    type: \"email\",\n                    message: \"Please enter a valid email\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Email\" />\n              </Form.Item>\n              <Form.Item\n                name=\"first_name\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your First Name!\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"First Name\" />\n              </Form.Item>\n              <Form.Item\n                name=\"last_name\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your Last Name!\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Last Name\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your password!\",\n                  },\n                ]}\n              >\n                <Input.Password placeholder=\"Password\" />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  className=\"primaryBtn-2\"\n                  style={{ width: \"100%\" }}\n                  htmlType=\"submit\"\n                  loading={loggingIn}\n                >\n                  Register\n                </Button>\n                <br />\n                <a\n                  onClick={() => {\n                    history.push(process.env.PUBLIC_URL + \"/login\");\n                  }}\n                  className=\"primaryColor\"\n                >\n                  Return to Login\n                </a>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .signUpWrapper {\n            display: flex;\n            justify-content: center;\n          }\n          .formHolder {\n            position: relative;\n            width: 500px;\n            background: #ffffff;\n            padding: 100px 50px;\n            box-shadow: rgba(200, 200, 200, 0.63) 2px 2px 7px 2px;\n            margin-top: 40px;\n            border-radius: 15px;\n            z-index: 0;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\nimport { check_login, login_user, showNotification } from \"../utils/user.util\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function ForgetPassword(props) {\n  const [loggingIn, setLoggingIn] = useState(false);\n  const history = useHistory();\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  useEffect(() => {\n    if (check_login()) {\n      history.push(process.env.PUBLIC_URL);\n    }\n  });\n\n  const restorePassword = (values) => {\n    setLoggingIn(true);\n    axios\n      .post(G_API_URL + \"user/forget-password\", values)\n      .then((res) => {\n        setLoggingIn(false);\n        if (res.data.status) {\n          showNotification(\"success\", \"Password reset link sent successfully\");\n          history.push(process.env.PUBLIC_URL + \"/login\");\n        } else showNotification(\"info\", \"Account not found\");\n      })\n      .catch(() => {\n        setLoggingIn(false);\n        showNotification();\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout>\n      <div className=\"forgetPasswordWrapper\">\n        <div style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              background: \"rgb(254, 141, 27) none repeat scroll 0% 0%\",\n              width: \"191px\",\n              height: \"191px\",\n              top: \"30px\",\n              left: \"-12px\",\n              \"border-radius\": \"15px\",\n              \"z-index\": 0,\n            }}\n          ></div>\n          <div className=\"formHolder\">\n            <h2 style={{ \"text-align\": \"center\" }}>Reset Password</h2>\n            <Form\n              name=\"basic\"\n              onFinish={restorePassword}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your username!\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Username\" />\n              </Form.Item>\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  className=\"primaryBtn-2\"\n                  style={{ width: \"100%\" }}\n                  htmlType=\"submit\"\n                  loading={loggingIn}\n                >\n                  Reset Password\n                </Button>\n                <br />\n                <a\n                  onClick={() => {\n                    history.push(process.env.PUBLIC_URL + \"/login\");\n                  }}\n                  className=\"primaryColor\"\n                >\n                  Return to Login\n                </a>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .forgetPasswordWrapper {\n            display: flex;\n            justify-content: center;\n          }\n          .formHolder {\n            position: relative;\n            width: 500px;\n            background: #ffffff;\n            padding: 100px 50px;\n            box-shadow: rgba(200, 200, 200, 0.63) 2px 2px 7px 2px;\n            margin-top: 40px;\n            border-radius: 15px;\n            z-index: 0;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\nimport { check_login, getToken, showNotification } from \"../utils/user.util\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function ChangePassword(props) {\n  const [loggingIn, setLoggingIn] = useState(false);\n  const history = useHistory();\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  useEffect(() => {\n    if (!check_login()) {\n      history.push(process.env.PUBLIC_URL + \"login\");\n    }\n  });\n\n  const ChangePass = (values) => {\n    setLoggingIn(true);\n    axios\n      .post(G_API_URL + \"user/change-password\", values, {\n        headers: {\n          Authorization: getToken(),\n        },\n      })\n      .then((res) => {\n        setLoggingIn(false);\n        if (res.data.status) {\n          showNotification(\"success\", \"Password Changed Successfully\");\n          history.push(process.env.PUBLIC_URL);\n        } else\n          showNotification(\n            \"info\",\n            res?.data?.message ?? \"Unable to change password\"\n          );\n      })\n      .catch(() => {\n        setLoggingIn(false);\n        showNotification();\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout>\n      <div className=\"changePassWrapper\">\n        <div style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              background: \"rgb(254, 141, 27) none repeat scroll 0% 0%\",\n              width: \"191px\",\n              height: \"191px\",\n              top: \"30px\",\n              left: \"-12px\",\n              \"border-radius\": \"15px\",\n              \"z-index\": 0,\n            }}\n          ></div>\n          <div className=\"formHolder\">\n            <h2 style={{ \"text-align\": \"center\" }}>Change Password</h2>\n            <Form\n              name=\"basic\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={ChangePass}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                name=\"old_pass\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your old password!\",\n                  },\n                ]}\n              >\n                <Input.Password placeholder=\"Olp Password\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"new_pass\"\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your new password!\",\n                  },\n                  { min: 5, message: \"Username must be minimum 5 characters.\" },\n                ]}\n              >\n                <Input.Password min={5} placeholder=\"New Password\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"confirm_password\"\n                dependencies={[\"new_pass\"]}\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your new password!\",\n                  },\n                  ({ getFieldValue }) => ({\n                    validator(rule, value) {\n                      if (!value || getFieldValue(\"new_pass\") === value) {\n                        return Promise.resolve();\n                      }\n                      return Promise.reject(\n                        \"The two passwords that you entered do not match!\"\n                      );\n                    },\n                  }),\n                ]}\n              >\n                <Input.Password placeholder=\"Confirm New Password\" />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  className=\"primaryBtn-2\"\n                  style={{ width: \"100%\" }}\n                  htmlType=\"submit\"\n                  loading={loggingIn}\n                >\n                  Update Password\n                </Button>\n                <br />\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .changePassWrapper {\n            display: flex;\n            justify-content: center;\n          }\n          .formHolder {\n            position: relative;\n            width: 500px;\n            background: #ffffff;\n            padding: 100px 50px;\n            box-shadow: rgba(200, 200, 200, 0.63) 2px 2px 7px 2px;\n            margin-top: 40px;\n            border-radius: 15px;\n            z-index: 0;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport axios from \"axios\";\nimport { G_API_URL, G_HOME_URL } from \"../constants/constants\";\nimport { check_login, showNotification } from \"../utils/user.util\";\nimport { useHistory } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nexport default function VerifyAccount(props) {\n  const history = useHistory();\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  useEffect(() => {\n    if (check_login()) {\n      history.push(process.env.PUBLIC_URL);\n    }\n    let params = queryString.parse(props.location.search);\n    verifyUser({\n      username: params.u_name,\n      v_code: params.vcode,\n    });\n  });\n\n  const verifyUser = (values) => {\n    axios\n      .post(G_API_URL + \"user/verify\", values)\n      .then((res) => {\n        if (res.data.status) {\n          showNotification(\"success\", \"Account Successfully Verified\");\n          window.location = G_HOME_URL + \"login\";\n        } else showNotification(\"info\", \"Invalid or expired verification code\");\n      })\n      .catch(() => {\n        showNotification();\n      });\n  };\n\n  return (\n    <Layout>\n      <div className=\"verification\"></div>\n      <style jsx>{``}</style>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Button } from \"antd\";\nimport notfound from \"../assets/imgs/404.png\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function NotFound(props) {\n  const history = useHistory();\n\n  return (\n    <Layout>\n      <div className=\"notFoundWrapper\">\n        <div style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              background: \"rgb(254, 141, 27) none repeat scroll 0% 0%\",\n              width: \"191px\",\n              height: \"191px\",\n              top: \"30px\",\n              left: \"-12px\",\n              \"border-radius\": \"15px\",\n              \"z-index\": 0,\n            }}\n          ></div>\n          <div className=\"formHolder\">\n            <img\n              src={notfound}\n              height={300}\n              width={300}\n              style={{ \"align-self\": \"center\" }}\n            />\n            <Button\n              type=\"primary\"\n              className=\"primaryBtn-2\"\n              style={{ width: \"100%\" }}\n              onClick={() => {\n                history.replace(\"/\");\n              }}\n            >\n              Go to home page.\n            </Button>\n          </div>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .notFoundWrapper {\n            display: flex;\n            justify-content: center;\n          }\n          .formHolder {\n            position: relative;\n            width: 500px;\n            background: #ffffff;\n            padding: 100px 50px;\n            box-shadow: rgba(200, 200, 200, 0.63) 2px 2px 7px 2px;\n            margin-top: 40px;\n            border-radius: 15px;\n            z-index: 0;\n            display: flex;\n            flex-direction: column;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\nimport { check_login, getToken, showNotification } from \"../utils/user.util\";\nimport { useHistory } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nexport default function ResetPassword(props) {\n  const [loggingIn, setLoggingIn] = useState(false);\n  const history = useHistory();\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  useEffect(() => {\n    if (check_login()) {\n      history.push(process.env.PUBLIC_URL);\n    }\n  });\n\n  const ChangePass = (values) => {\n    setLoggingIn(true);\n    let params = queryString.parse(props.location.search);\n    axios\n      .post(\n        G_API_URL + \"user/reset-password\",\n        { ...values, ...{ r_code: params.r_code } },\n        {\n          headers: {\n            Authorization: getToken(),\n          },\n        }\n      )\n      .then((res) => {\n        setLoggingIn(false);\n        if (res.data.status) {\n          showNotification(\"success\", \"Password Changed Successfully\");\n          history.replace(\"/login\");\n        } else\n          showNotification(\n            \"info\",\n            res?.data?.message ?? \"Unable to reset password\"\n          );\n      })\n      .catch(() => {\n        setLoggingIn(false);\n        showNotification();\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout>\n      <div className=\"resetPassWrapper\">\n        <div style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              background: \"rgb(254, 141, 27) none repeat scroll 0% 0%\",\n              width: \"191px\",\n              height: \"191px\",\n              top: \"30px\",\n              left: \"-12px\",\n              \"border-radius\": \"15px\",\n              \"z-index\": 0,\n            }}\n          ></div>\n          <div className=\"formHolder\">\n            <h2 style={{ \"text-align\": \"center\" }}>Reset Password</h2>\n            <Form\n              name=\"basic\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={ChangePass}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                name=\"password\"\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your new password!\",\n                  },\n                  { min: 5, message: \"Username must be minimum 5 characters.\" },\n                ]}\n              >\n                <Input.Password min={5} placeholder=\"New Password\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"confirm_password\"\n                dependencies={[\"password\"]}\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your new password!\",\n                  },\n                  ({ getFieldValue }) => ({\n                    validator(rule, value) {\n                      if (!value || getFieldValue(\"password\") === value) {\n                        return Promise.resolve();\n                      }\n                      return Promise.reject(\n                        \"The two passwords that you entered do not match!\"\n                      );\n                    },\n                  }),\n                ]}\n              >\n                <Input.Password placeholder=\"Confirm New Password\" />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  className=\"primaryBtn-2\"\n                  style={{ width: \"100%\" }}\n                  htmlType=\"submit\"\n                  loading={loggingIn}\n                >\n                  Log In\n                </Button>\n                <br />\n                <a\n                  onClick={() => {\n                    history.replace(\"/login\");\n                  }}\n                  className=\"primaryColor\"\n                >\n                  Go back to login\n                </a>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .resetPassWrapper {\n            display: flex;\n            justify-content: center;\n          }\n          .formHolder {\n            position: relative;\n            width: 500px;\n            background: #ffffff;\n            padding: 100px 50px;\n            box-shadow: rgba(200, 200, 200, 0.63) 2px 2px 7px 2px;\n            margin-top: 40px;\n            border-radius: 15px;\n            z-index: 0;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Form, Input, Button, Modal } from \"antd\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\nimport { check_login, getToken, showNotification } from \"../utils/user.util\";\nimport { useHistory } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nexport default function EnableTfa(props) {\n  const [loggingIn, setLoggingIn] = useState(false);\n  const [tfaModalVisible, setTfaModalVisible] = useState(false);\n  const [tfaQr, setTfaQr] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!check_login()) {\n      history.replace(\"/login\");\n    }\n  });\n\n  const enableTfaInit = () => {\n    axios\n      .put(\n        G_API_URL + \"user/tfa\",\n        {},\n        {\n          headers: {\n            Authorization: getToken(),\n          },\n        }\n      )\n      .then((res) => {\n        if (res.data.status) {\n          setTfaQr(res.data.img);\n          setTfaModalVisible(true);\n        }\n      })\n      .catch(() => {});\n  };\n\n  const validateTfa = (val) => {\n    axios\n      .put(G_API_URL + \"user/verify-tfa\", val, {\n        headers: {\n          Authorization: getToken(),\n        },\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status) {\n          setTfaModalVisible(false);\n          setTfaQr(false);\n          showNotification(\"success\", \"2fa enabled successfully\");\n        } else showNotification(\"info\", res.data.message);\n      });\n  };\n\n  return (\n    <Layout>\n      <Modal\n        title=\"Enable 2fa\"\n        visible={tfaModalVisible}\n        onCancel={() => {\n          setTfaModalVisible(false);\n          setTfaQr(\"\");\n        }}\n        footer={null}\n      >\n        <Form\n          name=\"tfaForm\"\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={validateTfa}\n          style={{\n            \"text-align\": \"center\",\n          }}\n        >\n          <img src={tfaQr} height={150} width={150}></img>\n          <Form.Item\n            name=\"code\"\n            rules={[\n              {\n                required: true,\n                message: \"2fa code is required\",\n              },\n            ]}\n          >\n            <Input style={{ width: 170 }} placeholder=\"Input 2fa code\" />\n          </Form.Item>\n\n          <Button htmlType=\"submit\">Verify & Setup 2fa</Button>\n        </Form>\n      </Modal>\n      <div className=\"tfaWrapper\">\n        <div style={{ position: \"relative\" }}>\n          <Button loading={loggingIn} onClick={enableTfaInit}>\n            Enable 2fa\n          </Button>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .tfaWrapper {\n            display: flex;\n            justify-content: center;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/LayoutComps/Layout\";\nimport { Form, Input, Button, Upload, DatePicker, Switch, Spin } from \"antd\";\nimport axios from \"axios\";\nimport { G_API_URL } from \"../constants/constants\";\nimport { check_login, getToken, showNotification } from \"../utils/user.util\";\nimport { useHistory } from \"react-router-dom\";\nimport imageFileToBase64 from \"image-file-to-base64-exif\";\n\nexport default function CreateGame(props) {\n  const [loggingIn, setLoggingIn] = useState(false);\n  const [fileList, setFileList] = useState([]);\n  const history = useHistory();\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  useEffect(() => {\n    if (!check_login()) {\n      history.push(process.env.PUBLIC_URL + \"login\");\n    }\n  });\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  const onGameCreateInit = async (values) => {\n    setLoggingIn(true);\n    if (values?.game_image?.file) {\n      await imageFileToBase64(values?.game_image?.file).then(function(base64) {\n        values[\"game_image\"] = base64;\n      });\n    }\n    values[\"start_time\"] = new Date(values.game_time[0]).getTime();\n    values[\"end_time\"] = new Date(values.game_time[1]).getTime();\n    console.log(values);\n    axios\n      .post(G_API_URL + \"game\", values, {\n        headers: {\n          Authorization: getToken(),\n        },\n      })\n      .then((res) => {\n        if (res.data.status) {\n          console.log(res);\n        }\n        setLoggingIn(false);\n      })\n      .catch(() => {\n        setLoggingIn(false);\n      });\n  };\n\n  const uploadProps = {\n    onRemove: (file) => {\n      const index = fileList.indexOf(file);\n      const newFileList = fileList.slice();\n      newFileList.splice(index, 1);\n      setFileList(newFileList);\n    },\n    beforeUpload: (file) => {\n      setFileList([file]);\n      return false;\n    },\n    fileList,\n  };\n\n  return (\n    <Layout>\n      <div className=\"createGameWrapper\">\n        <div style={{ position: \"relative\" }}>\n          <div\n            style={{\n              position: \"absolute\",\n              background: \"rgb(254, 141, 27) none repeat scroll 0% 0%\",\n              width: \"191px\",\n              height: \"191px\",\n              top: \"30px\",\n              left: \"-12px\",\n              \"border-radius\": \"15px\",\n              \"z-index\": 0,\n            }}\n          ></div>\n          <div className=\"formHolder\">\n            <h2 style={{ \"text-align\": \"center\" }}>Create Game</h2>\n            <Spin tip=\"Saving...\" spinning={loggingIn}>\n              <Form\n                name=\"basic\"\n                initialValues={{\n                  remember: true,\n                }}\n                onFinish={onGameCreateInit}\n                onFinishFailed={onFinishFailed}\n              >\n                <Form.Item\n                  name=\"game_name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Game name is required\",\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Game Name\" />\n                </Form.Item>\n\n                <Form.Item\n                  name=\"game_description\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Game description is required\",\n                    },\n                  ]}\n                >\n                  <Input.TextArea rows={5} placeholder=\"Game description\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"game_time\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Game start & end time is required\",\n                    },\n                  ]}\n                >\n                  <DatePicker.RangePicker\n                    placeholder={[\"Game Start Time\", \"Game End Time\"]}\n                    showTime\n                  />\n                </Form.Item>\n                <Form.Item\n                  name=\"game_user_limit\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Game registeration limit is required\",\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Registeration Limit\" />\n                </Form.Item>\n\n                <Form.Item name=\"game_image\">\n                  <Upload {...uploadProps}>\n                    <Button>Select Game Image</Button>\n                  </Upload>\n                </Form.Item>\n                <Form.Item label=\"Game Type\" name=\"game_type\">\n                  <Switch\n                    onChange={() => {}}\n                    checkedChildren=\"Private game\"\n                    unCheckedChildren=\"Public Game\"\n                  />\n                </Form.Item>\n\n                <Form.Item\n                  name=\"joining_description\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Game join info is required\",\n                    },\n                  ]}\n                >\n                  <Input.TextArea rows={5} placeholder=\"Join information\" />\n                </Form.Item>\n                <Form.Item\n                  label=\"Join code will be available to users 1 hr before the game\"\n                  name=\"join_code\"\n                  rules={[\n                    {\n                      required: false,\n                      message: \"Game description is required\",\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Join code\" />\n                </Form.Item>\n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    className=\"primaryBtn-2\"\n                    style={{ width: \"100%\" }}\n                    htmlType=\"submit\"\n                    loading={loggingIn}\n                  >\n                    Create Game\n                  </Button>\n                  <br />\n                </Form.Item>\n              </Form>\n            </Spin>\n          </div>\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .createGameWrapper {\n            display: flex;\n            justify-content: center;\n          }\n          .formHolder {\n            position: relative;\n            width: 500px;\n            background: #ffffff;\n            padding: 100px 50px;\n            box-shadow: rgba(200, 200, 200, 0.63) 2px 2px 7px 2px;\n            margin-top: 40px;\n            border-radius: 15px;\n            z-index: 0;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { render } from \"react-dom\";\nimport './index.css';\nimport Hello from \"./pages/index\";\nimport SignIn from \"./pages/login\";\nimport SignUp from \"./pages/signUp\";\nimport ForgetPassword from \"./pages/forgetPassword\";\nimport 'antd/dist/antd.css'\nimport ChangePassword from \"./pages/changePassword\";\nimport VerifyAccount from \"./pages/verifyAccount\";\nimport NotFound from \"./pages/notFound\";\nimport ResetPassword from \"./pages/resetPassword\";\nimport EnableTfa from \"./pages/enableTfa\";\nimport CreateGame from \"./pages/createGame\";\n\nfunction App() {\n    return (\n        <Switch>\n            <Route path={`${process.env.PUBLIC_URL}/`} exact component={Hello} />\n            <Route path={`${process.env.PUBLIC_URL}/login`} exact component={SignIn} />\n            <Route path={`${process.env.PUBLIC_URL}/signup`} exact component={SignUp} />\n            <Route path={`${process.env.PUBLIC_URL}/forget-password`} exact component={ForgetPassword} />\n            <Route path={`${process.env.PUBLIC_URL}/verify-account`} exact component={VerifyAccount} />\n            <Route path={`${process.env.PUBLIC_URL}/change-password`} exact component={ChangePassword} />\n            <Route path={`${process.env.PUBLIC_URL}/reset-password`} exact component={ResetPassword} />\n            <Route path={`${process.env.PUBLIC_URL}/enable-tfa`} exact component={EnableTfa} />\n            <Route path={`${process.env.PUBLIC_URL}/create-game`} exact component={CreateGame} />\n            <Route exact component={NotFound} />\n        </Switch>\n    );\n}\n\nrender(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}